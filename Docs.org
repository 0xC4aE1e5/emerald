* Documentation
** The Documentation is incomplete.
Emerald is a small programming language that is designed to be easy to learn and use.
It's set of functions is growing very fast and it's a work in progress.
But it's also a very good language to learn and use.
** The Hello World program
The first program you should write is the Hello World program. It's a very simple program that prints the text "Hello World" on the screen.
To first use it, you need to install the Emerald interpreter.
Usually, you just need to run =pfw.rb= and then type =ruby windows.rb= if you're on Windows and have Ruby installed. This patches Emerald to work with the Ruby language and not Crystal.
If you're on Linux, you just have to type =make emerald= if you have the Crystal compiler installed.
Then, run Emerald by typing =ruby windows.rb= if you're on Windows and =./emerald= on Linux. You should see something like this:
#+BEGIN_SRC
Emerald REPL
=>
#+END_SRC
What you need to do is press Ctrl+C. Now create a file called =hworld.em= and write the following code:
#+BEGIN_SRC emerald
print Hello World
#+END_SRC
Then, in the command to run, run the command, but append =hworld.em= to the end of the command. You should see =Hello World=. You can swap =Hello World= with something else.
** Adding numbers
To add numbers, you use the add function. To do that, run this code to add 5+2:
#+BEGIN_SRC emerald
add 5 2
#+END_SRC
Notice that it didn't output anything. To output the result, run this:
#+BEGIN_SRC emerald
add 5 2
usevariable add print @
#+END_SRC
Essentially, it's saying to the computer:

#+BEGIN_QUOTE
Add 5+2, and store that into a variable called =add=.

Now, get =add='s contents and print it out.
#+END_QUOTE

We will talk more about =usevariable=.
** Subtracting/Multiplying/Dividing
The syntax is exactly the same as =add=, but use the correct operator. Here is a little chart:

=subtract= for subtracting

=multiply= for multiplying

=divide= for dividing

Also, the variable name to use is the exact same as the operator.
** User input
One thing about interactive CLI programs is that they use input functions. Be it a Python app, Java app, or even an Emerald app.
The syntax for the input function is actually the same as Python's. Here is an example of =input=:
#+BEGIN_SRC emerald
input What's your name?
usevariable input print Howdy, @
#+END_SRC
Note that functions that are supposed to return things, actually create a variable. This is normal.
